plugins:
  - serverless-finch

service: EasyMetaFields

provider:
  name: aws
  runtime: go1.x
  stage: prod
  region: eu-west-1

  environment:
    SHOPIFY_API_KEY: ${ssm:/${self:service}/${self:provider.stage}/SHOPIFY_API_KEY}
    SHOPIFY_API_SECRET: ${ssm:/${self:service}/${self:provider.stage}/SHOPIFY_API_SECRET}
    SHOPIFY_SCOPE: "read_script_tags,write_script_tags,read_orders,write_orders,read_products,write_products"
    DYNAMODB_TABLE: "easymetafields"


  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::Join": ["", ["arn:aws:dynamodb:" , {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"} , ":table/${self:provider.environment.DYNAMODB_TABLE}"]]

package:
  individually: true
  exclude:
    - ./**



functions:

  index:
    handler: index
    name: ${self:provider.environment.DYNAMODB_TABLE}_index
    description: First step of the OAuth Handshake
    events:
      - http:
          path: /
          method: get
          cors: true
    package:
      include:
        - index
  auth:
    handler: auth
    name: ${self:provider.environment.DYNAMODB_TABLE}_auth
    description: First step of the OAuth Handshake
    events:
      - http:
          path: /auth
          method: get
          cors: true
    package:
      include:
        - auth

  auth_callback:
    handler: auth_callback
    name: ${self:provider.environment.DYNAMODB_TABLE}_auth_callback
    description: Callback function for the OAuth Handshake

    events:
      - http:
          path: /auth/callback
          method: get
          cors: true
    package:
      include:
        - auth_callback

  uninstall:
    handler: uninstall
    name: ${self:provider.environment.DYNAMODB_TABLE}_webhooks_uninstall
    description: Callback function for the OAuth Handshake

    events:
      - http:
          path: /webhooks/uninstall
          method: post
          cors: true
    package:
      include:
        - ./webhooks/uninstall


resources:
  Resources:

    ShopsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}

        AttributeDefinitions:
          -
            AttributeName: shopid
            AttributeType: S

        KeySchema:
          -
            AttributeName: shopid
            KeyType: HASH

        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.DYNAMODB_TABLE}-bucket
        AccessControl: PublicRead
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - GET
                - HEAD
              AllowedOrigins:
                - "*"
              AllowedHeaders:
                - "*"

  Outputs:

    ShopsTable:
      Description: "The name of the Shops Table"
      Value:
        Ref: ShopsTable

    ShopsTableArn:
      Description: "The ARN for the Shops Table"
      Value:
        Fn::GetAtt:
          - ShopsTable
          - Arn
      Export:
        Name: ShopsTableArn

custom:
  client:
    bucketName: ${self:provider.environment.DYNAMODB_TABLE}-bucket
    manageResources: false